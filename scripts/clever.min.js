var _slicedToArray = function() {
  function a(a, b) {
    var c = [],
      d = !0,
      e = !1,
      f = void 0;
    try {
      for(var g, h = a[Symbol.iterator](); !(d = (g = h.next()).done) && (c.push(g.value), !(b && c.length === b)); d = !0);
    } catch (a) {
      e = !0, f = a
    } finally {
      try {
        !d && h['return'] && h['return']()
      } finally {
        if(e) throw f
      }
    }
    return c
  }
  return function(b, c) {
    if(Array.isArray(b)) return b;
    if(Symbol.iterator in Object(b)) return a(b, c);
    throw new TypeError('Invalid attempt to destructure non-iterable instance')
  }
}();
Array.prototype.map || Object.defineProperty(Array.prototype, 'map', {
  value: function c(a) {
    var b = [];
    return this.forEach(function(c, d) {
      b.push(a(c, d))
    }), b
  }
}), Array.prototype.filter || Object.defineProperty(Array.prototype, 'filter', {
  value: function c(a) {
    var b = [];
    return this.forEach(function(c, d) {
      a(c, d) && b.push(c)
    }), b
  }
}), Array.prototype.includes || Object.defineProperty(Array.prototype, 'includes', {
  value: function b(a) {
    return -1 != this.indexOf(a)
  }
}), String.prototype.includes || Object.defineProperty(String.prototype, 'includes', {
  value: function b(a) {
    return -1 != this.indexOf(a)
  }
});
// var $ = function(a) {
//   return document.getElementById(a)
// };

function _SliceArray(a, b) {
  var c = [],
    d = [];
  return a.forEach(function(e, f) {
    d.push(e), (f && 0 == (f + 1) % b || f == a.length - 1) && (c.push(d), d = [])
  }), c
}(function() {
  function a(a, b) {
    var c = Math.ceil,
      d = _slicedToArray(a.size, 2),
      e = d[0],
      f = d[1],
      g = e / f;
    e /= 720, f = f / 1135 * innerHeight, e = f * g > innerWidth * e ? innerWidth * e : f * g, f = e / g, a.el.style.width = c(e) + 'px', a.el.style.height = c(f) + 'px', b && b(a)
  }
  var b = [];
  Vue.directive('suit', {
    inserted: function e(c, d) {
      a({
        el: c,
        size: d.expression.split(',')
      }, function(a) {
        return b.push(a)
      })
    }
  }), Vue.directive('roll', {
    inserted: function d(a) {
      var b, c = a.parentElement;
      (/micromessenger/i.test(navigator.userAgent) || /ip(hone|ad)/i.test(navigator.userAgent)) && (a.addEventListener('touchstart', function(a) {
        return b = a.targetTouches[0].clientY
      }), a.addEventListener('touchmove', function(a) {
        var d = a.touches[0].clientY;
        (d > b && c.scrollTop || d < b && c.scrollTop != c.scrollHeight - c.offsetHeight) && a.stopPropagation(), b = d
      }, {
        passive: !1
      }))
    }
  }), Vue.component('cp-page', {
    props: ['name', 'roll', 'once', 'bottom'],
    data: function a() {
      return {
        a_show: !1,
        showed: ''
      }
    },
    computed: {
      show: function a() {
        return this.$root.page == this.name
      }
    },
    watch: {
      show: function d(a, b) {
        var c = this;
        b && this.once !== void 0 && (this.showed = !0), a ? (this.$el.style.display = this.display, setTimeout(function() {
          return c.a_show = !0
        }, 100)) : (this.a_show = !1, setTimeout(function() {
          return c.$el.style.display = 'none'
        }, 400))
      }
    },
    render: function b(a) {
      return a('div', {
        class: ['cp-page', {
          show: this.a_show,
          showed: this.showed,
          "cp-page-short": void 0 === this.roll,
          "cp-page-bottom": void 0 !== this.bottom
        }, 'page_' + this.name]
      }, this.roll === void 0 ? this.$slots.default : [a('cp-roll', {}, this.$slots.default), this.$slots.fixed])
    },
    mounted: function a() {
      this.bottom !== void 0 && (this.$el.style.height = innerHeight + 'px'), this.display = getComputedStyle(this.$el).display, this.$el.style.display = 'none'
    }
  }), Vue.component('cp-wrap', {
    props: ['name'],
    computed: {
      a_show: function a() {
        return this.$root[this.name]
      }
    },
    watch: {
      a_show: function c(a) {
        var b = this;
        a ? this.$el.style.zIndex = 999 : setTimeout(function() {
          return b.$el.style.zIndex = -1
        }, 400)
      }
    },
    render: function b(a) {
      return a('div', {
        class: ['cp-wrap', {
          "cp-wrap-show": this.a_show
        }, 'cp-wrap-' + this.name]
      }, this.$slots.default)
    }
  }), Vue.component('cp-pop', {
    props: ['name', 'once', 'full', 'bottom', 'suit', 'alive'],
    data: function a() {
      return {
        showed: ''
      }
    },
    computed: {
      show: function a() {
        return this.alive !== void 0 || this.$root[this.$parent.name] == this.name
      }
    },
    render: function c(a) {
      var b = this.suit === void 0 ? [] : [{
        name: 'suit',
        expression: this.suit
      }];
      return a('div', {
        class: ['cp-pop-box', {
          show: this.show,
          showed: this.showed
        }]
      }, [a('div', {
        directives: b,
        class: ['cp-pop', {
          "cp-pop-bottom": void 0 !== this.bottom,
          "cp-pop-full": void 0 !== this.full || void 0 !== this.bottom
        }, this.alive === void 0 ? this.$parent.name + '_' + this.name : 'pop_' + this.$parent.name]
      }, this.$slots.default)])
    },
    created: function c() {
      var a = this;
      if(this.once !== void 0) var b = this.$watch('show', function(c, d) {
        d && (b(), a.showed = !0)
      })
    },
    mounted: function a() {
      (this.full !== void 0 || this.bottom !== void 0) && (this.$el.children[0].style.height = innerHeight + 'px')
    }
  }), Vue.component('cp-select', {
    props: {
      name: String,
      list: Array,
      lazy: null,
      value: null,
      disabled: null,
      placeholder: {
        type: String,
        default: '\u9009\u62E9'
      }
    },
    model: {
      prop: 'value',
      event: 'change'
    },
    data: function a() {
      return {
        show: '',
        text: '',
        a_list: ''
      }
    },
    watch: {
      value: function d(a, b) {
        if('' !== a) {
          var c = this.a_list.filter(function(b) {
            return b.val === a
          });
          c.length ? this.text = c[0].key : this.$emit('change', b)
        }
      }
    },
    computed: {
      a_class: function b() {
        var a = ['cp-select-box', {
          "cp-select-delta": !this.disabled
        }];
        return this.name && a.push('select_' + this.name), a
      }
    },
    methods: {
      Show: function b() {
        var a = this;
        window.__cp_select_group.forEach(function(b) {
          b.name != a.name || a.disabled ? b.name != a.name && (b.show = !1) : a.show = !a.show
        })
      },
      Select: function b(a) {
        a.target.dataset.index && (a = this.a_list[a.target.dataset.index], this.value = a.val, this.$emit('change', a.val))
      }
    },
    created: function c() {
      var a = this;
      this.a_list = this.lazy === void 0 ? this.list.map(function(a) {
        return a.key ? a : {
          key: a,
          val: a
        }
      }) : this.list, window.__cp_select_group ? window.__cp_select_group.push(this) : (window.__cp_select_group = [this], document.addEventListener('click', function() {
        return window.__cp_select_group.forEach(function(a) {
          return a.show = !1
        })
      }));
      var b = this.a_list.filter(function(b) {
        return b.val === a.value
      });
      b.length && (this.text = b[0].key)
    },
    template: '\n    <div :class=a_class @click.stop=Show>\n      <span class=\'cp-select-val\'>{{text || placeholder}}</span>\n      <ul class=\'cp-select-group\' v-show=show @click=Select>\n        <li class=\'cp-select-item\' v-show=text>{{text}}</li>\n        <li class=\'cp-select-item\' v-for=\'(n,i) in a_list\' v-show=\'value !== n.val\' :data-index=i>{{n.key}}</li>\n      </ul>\n    </div>'
  }), Vue.component('cp-phone-code', {
    props: ['name', 'disabled', 'tw', 'simple', 'value', 'placeholder'],
    model: {
      props: 'value',
      event: 'change'
    },
    data: function a() {
      return {
        list: ''
      }
    },
    watch: {
      value: function b(a) {
        this.$emit('change', a)
      }
    },
    created: function b() {
      var a = [{
        key: this.simple === void 0 ? '\u6FB3\u9580' : '\u6FB3\u95E8',
        val: '853'
      }, {
        key: '\u9999\u6E2F',
        val: '852'
      }, {
        key: this.simple === void 0 ? '\u53F0\u7063' : '\u53F0\u6E7E',
        val: '886'
      }, {
        key: this.simple === void 0 ? '\u5927\u9678' : '\u5927\u9646',
        val: '86'
      }, {
        key: '\u5176\u4ED6',
        val: '00'
      }];
      this.tw === void 0 && a.splice(2, 1), this.list = a, this.placeholder = this.placeholder || (this.simple === void 0 ? '\u9078\u64C7' : '\u9009\u62E9')
    },
    template: '<div is=cp-select :name=name :list=list :disabled=disabled :placeholder=placeholder lazy v-model=value></div>'
  }), Vue.component('cp-wait', {
    props: ['msg'],
    template: '\n    <div class=\'p_middle cp-wait\'>\n      <div class=\'p_middle cp-wait-msg\'>{{msg}}</div>\n    </div>'
  }), Vue.component('cp-roll', {
    props: ['html'],
    render: function c(a) {
      var b = this.html === void 0 ? {} : {
        innerHTML: this.html
      };
      return a('div', {
        class: 'cp-roll'
      }, [a('div', {
        domProps: b,
        directives: [{
          name: 'roll'
        }]
      }, this.$slots.default)])
    }
  });
  var c;
  Vue.prototype.$wait = function() {
    var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : '\u6B63\u5728\u52A0\u8F7D';
    c ? c.msg = a : c = new Vue({
      el: document.createElement('div'),
      data: {
        msg: a,
        "cp-waiting": ''
      },
      render: function b(a) {
        return a('cp-wrap', {
          props: {
            name: 'cp-waiting'
          },
          nativeOn: {
            touchmove: function b(a) {
              return a.preventDefault()
            }
          }
        }, [a('cp-pop', {
          props: {
            name: 'waiting'
          }
        }, [a('cp-wait', {
          props: {
            msg: this.msg
          }
        })])])
      },
      mounted: function b() {
        var a = this;
        document.body.appendChild(this.$el), setTimeout(function() {
          return a['cp-waiting'] = 'waiting'
        })
      }
    })
  }, Vue.prototype.$wait.over = function() {
    c && (c['cp-waiting'] = !1, setTimeout(function() {
      document.body.removeChild(c.$el), c = null
    }, 400))
  }, window.App = Vue.extend({
    mixins: [{
      el: '#app',
      data: function a() {
        return {
          load: 0,
          page: '',
          alert: '',
          ralert: ''
        }
      },
      methods: {
        AlertClose: function a() {
          this.alert = ''
        },
        RalertClose: function a() {
          this.ralert = ''
        }
      },
      beforeCreate: function b() {
        var a = this;
        this._query = {}, location.search.slice(1).split('&').forEach(function(b) {
          if(b) {
            var c = b.split('='),
              d = _slicedToArray(c, 2),
              e = d[0],
              f = d[1];
            a._query[e] = f
          }
        }), this._isIOS = /ip(hone|ad)/i.test(navigator.userAgent), this._isWeChat = /micromessenger/i.test(navigator.userAgent), this.a_pages = []
      },
      mounted: function d() {
        var c = this;
        window.app = this, this.$el.style.height = innerHeight + 'px', this.$el.oncontextmenu = function() {
          return !1
        }, this.$el.addEventListener('resize', function() {
          c.$el.style.height = innerHeight + 'px', b.forEach(function(b) {
            return a(b)
          })
        }), (this._isWeChat || this._isIOS) && this.$el.addEventListener('touchmove', function(a) {
          return a.preventDefault()
        }, {
          passive: !1
        })
      }
    }]
  })
})();
